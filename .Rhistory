score <- matrix(c(90, 85, 69, 78,
85, 96, 49, 95,
90, 80, 70, 60),
nrow = 4, ncol = 3)
score
rownames(score) <- c('John', 'Tom', 'Mark', 'Jane')
colnames(score) <- c('English', 'Math', 'Science')
score
score['John', 'Math']
score["Tom", c('Math', 'Science')]
score['Mark',]
score[,'English']
rownames(score)
colnames(score)
colnames(score)[2]
city <- c("Seoul", "Tokyo", "Washington")
city <- c("Seoul", "Tokyo", "Washington")
rank <- c(1, 3, 2)
city.info <- data.frame(city, rank)
city.info
iris[,c(1:2)]
iris[,c(1, 3, 5)]
iris[,c("Sepal.Length", "Species")]
iris[1:5,]
iris[1:5, c(1,3)]
dim(iris)
nrow(iris)
ncol(iris)
colnames(iris)
head(iris)
tail(iris)
str(iris)
iris[,5]
unique(iris[,5])
table(iris[,"Species"])
colSums(iris[,-5])
colMeans(iris[,-5])
rowSums(iris[,-5])
rowMeans(iris[,-5])
z <- matrix(1:20, nrow = 4, ncol = 5)
z
t(2)
IR.1 <- subset(iris, Species=="aetosa")
IR.1
IR.1 <- subset(iris, Species=="aetosa")
IR.1
IR.1 <- subset(iris, Species=="setosa")
IR.1
IR.2 <- subset(iris, Sepal.Length>5.0 & Sepal.Windth > 4.0)
IR.2 <- subset(iris, Sepal.Length>5.0 & Sepal.Width > 4.0)
IR.2[,c(2,4)]
a <= matrix(1:20,4,5)
a <- matrix(1:20,4,5)
b <- matrix(21:40,4,5)
a
b
a*2
b-5
2*a + 3*b
a+b
b-a
b/a
a*b
a <- a*3
b <- b-5
a
b
class(iris)
class(state.x77)
is.matrix(iris)
is.data.frame(iris)
is.matrix(state.x77)
is.data.frame(state.x77)
st <- data.frame(state.x77)
head(st)
class(st)
iris.m <- as.matrix(iris[,1:4])
head(iris.m)
class(iris.m)
iris[,"Species"]
iris[,5]
iris["Species"]
iris[5]
iris$Species
setwd("C:\Sources\2570040")
air <- read.csv("airquality.csv", header = T)
job.type <- 'A'
if(job.type == 'B'){
bonus <- 200
} else{
bonus <- 100
}
print(bouns)
job.type <- 'A'
if(job.type == 'B'){
bonus <- 200
} else{
bonus <- 100
}
print(bouns)
job.type <- 'A'
if(job.type == 'B'){
bonus <- 200
} else{
bonus <- 100
}
print(bonus)
job.type <- 'B'
bonus <- 100
if(job.type == 'A'){
bonus <- 200
}
print(bonus)
sorce <- 85
sorce <- 85
if(score > 90){
geade <- 'A'
}else if(score > 80){
geade <- 'B'
}else if(score > 70){
geade <- 'C'
}else if(score > 60){
geade <- 'D'
}else{
geade <- 'F'
}
score <- 85
if(score > 90){
geade <- 'A'
}else if(score > 80){
geade <- 'B'
}else if(score > 70){
geade <- 'C'
}else if(score > 60){
geade <- 'D'
}else{
geade <- 'F'
}
print(geade)
a <- 10
b <- 20
if(a > 5 & b > 5){
print(a+b)
}
if(a > 5 | b > 30){
print(a*b)
}
a <- 10
b <- 20
if(a > b){
c <- a
}else{
c <- b
}
print(c)
a <- 10
b <- 20
c <- ifelse(a > b, a, b)
print(c)
for (n in 1:5) {
print('*')
}
for (n in 6:10) {
print(n)
}
for (n in 1:9) {
cat('2 *', n, '=', 2*n, '\n')
}
for (n in 1:9) {
for (m in 1:9) {
cat('m *', n, '=', m*n, '\n')
}
}
for (n in 1:9) {
for (m in 1:9) {
cat(m * n, '=', m*n, '\n')
}
}
for (n in 1:9) {
for (m in 1:9) {
cat(m ,'*', n, '=', m*n, '\n')
}
}
for (n in 1:9) {
for (m in 2:9) {
cat(m ,'*', n, '=', m*n, '\n')
}
}
for (n in 2:9) {
for (m in 1:9) {
cat(m ,'*', n, '=', m*n, '\n')
}
}
for (n in 2:9) {
for (m in 1:9) {
cat(m ,'*', n, '=', m*n, '\n\t')
}
}
for (n in 2:9) {
for (m in 1:9) {
cat(m ,'*', n, '=', m*n, '\n')
}
}
for (n in 2:9) {
cat('\n')
for (m in 1:9) {
cat(m ,'*', n, '=', m*n, '\n')
}
}
for (n in 1:20) {
if(n %% 2 == 0){
print(n)
}
}
for (n in 1:20) {
if(n %% 2 == 1){
print(n)
}
}
for (n in 1:9) {
cat('\n')
for (m in 2:9) {
cat(m ,'*', n, '=', m*n, '\n')
}
}
for (n in 1:9) {
cat('\n')
for (m in 2:9) {
cat(n ,'*', m, '=', n*m, '\n')
}
}
sum <- 0
for (n in 1:100) {
sum <- sum + n
}
print(sum)
norow <- norow(iris)
norow <- nrow(iris)
mylabel <- c()
norow <- nrow(iris)
mylabel <- c()
for (n in 1:norow) {
if (iris$Petal.Length[i] <= 1.6){
mylabel[i] <- 'L'
}else if(iris$Petal.Length[i] <= 5.1){
mylabel[i] <- 'H'
} else{
mylabel[i] <- 'M'
}
}
for (n in 1:norow) {
if (iris$Petal.Length[n] <= 1.6){
mylabel[n] <- 'L'
}else if(iris$Petal.Length[n] <= 5.1){
mylabel[n] <- 'H'
} else{
mylabel[n] <- 'M'
}
}
print(mylabel)
newds <- data.frame(iris$Petal.Length, mylabel)
head(newds)
for (n in 1:norow) {
if (iris$Petal.Length[n] <= 1.6){
mylabel[n] <- 'L'
}else if(iris$Petal.Length[n] >= 5.1){
mylabel[n] <- 'H'
} else{
mylabel[n] <- 'M'
}
}
print(mylabel)
newds <- data.frame(iris$Petal.Length, mylabel)
head(newds)
sum <- 0
n <- 1
while (n <- 100) {
sum <- sum + n
n <- n + 1
}
print(sum)
while (n <= 100) {
sum <- sum + n
n <- n + 1
}
print(sum)
sum <- 0
n <- 1
while (n <= 100) {
sum <- sum + n
n <- n + 1
}
print(sum)
sum <- 0
for (n in 1:10) {
sum <- sum + n
if(n >= 5) break
}
sum
sum <- 0
for (n in 1:10) {
if(n && 2==0) next
sum <- sum + n
}
sum
sum <- 0
for (n in 1:10) {
if(n && 2==0) next
sum <- sum + n
}
sum
for (n in 1:10) {
if(n %% 2==0) next
sum <- sum + n
}
sum
sum <- 0
for (n in 1:10) {
if(n %% 2==0) next
sum <- sum + n
}
sum
sum
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
mymax <- function(x, y){
num.max <- x
if (y > x){
num.max <- y
}
return(num.max)
}
mymax(10, 15)
a <- mymax(20, 15)
b <- mymax(31, 45)
print(a+b)
mydiv <- function(x, y=2){
result <- x/y
return(result)
}
mydiv(x = 10, y = 3)
mydiv(10,3)
mydiv(10)
myfunc <- function(x, y){
val.sum <- x + y
val.mul <- x * y
return(list(sum = val.sum, mul = val.mul))
}
result <- myfunc(5, 8)
s <- result$Sum
s <- result$sum
m <- result$mum
cat('5 + 8 =', s, '\n')
cat('5 * 8 =', m, '\n')
m <- result$mul
cat('5 * 8 =', m, '\n')
library(gapminder)
avocado <- read.csv("C:/Sources/avocado.csv", header=TRUE, sep = ",", fileEncoding = 'cp949')
str(avocado)
myfunc <- function(x, y){
val.sum <- x + y
val.mul <- x * y
return(list(sum = val.sum, mul = val.mul))
}
result <- myfunc(5, 8)
s <- result$sum
m <- result$mul
cat('5 + 8 =', s, '\n')
cat('5 * 8 =', m, '\n')
mydiv <- function(x, y=2){
result <- x/y
return(result)
}
mydiv(x = 10, y = 3)
mydiv(10,3)
mydiv(10)
setwd("C:\Sources\2570040")
setwd("C:\sources\2570040")
setwd("C:/sources/2570040")
sorce("myfunc.R")
source("myfunc.R")
mydiv <- function(x.y=2){
result <- x/y
return(result)
}
setwd("C:/sources/2570040")
source("myfunc.R")
a <- mydiv(20, 4)
a <- mydiv(20, 4)
setwd("C:/sources/2570040")
source("myfunc.R")
a <- mydiv(20, 4)
b <- mydiv(30, 4)
a + b
mydiv(mydiv(20, 2), 5)
setwd("C:/sources/2570040")
source("myfunc.R")
a <- mydiv(20, 4)
b <- mydiv(30, 4)
a + b
mydiv(mydiv(20, 2), 5)
score <- c(76, 84, 69, 50, 95, 60, 82, 71, 88, 84)
which(score==69)
which(score >= 85)
max(score)
which.max(score)
min(score)
which.min(score)
score <- c(76, 84, 69, 50, 95, 60, 82, 71, 88, 84)
idx < which(score <= 60)
score <- c(76, 84, 69, 50, 95, 60, 82, 71, 88, 84)
idx <- which(score <= 60)
score[idx] <- 61
score
idx <- which(score >= 80)
score.high <- score[idx]
score.high <- score[idx]
score.high
idx <- which(iris$Petal.Length > 5.0)
idx
iris.big <- iris[idx,]
iris.big
idx <- which(iris[,1:4] > 5.0, arr.ind = TRUE)
idx
favorite <- c('winter', 'summer', 'spring', 'summer', 'summer',
'fall', 'fall', 'summer', 'spring', 'spring', 'spring')
favorite
favorite <- c('winter', 'summer', 'spring', 'summer', 'summer',
'fall', 'fall', 'summer', 'spring', 'spring', 'spring')
favorite
favorite <- c('winter', 'summer', 'spring', 'summer', 'summer',
'fall', 'fall', 'summer', 'spring', 'spring', 'spring')
favorite
table(favorite)
favorite <- c('winter', 'summer', 'spring', 'summer', 'summer',
'fall', 'fall', 'summer', 'spring', 'spring')
favorite
table(favorite)
table(favorite)length(favorite)
table(favorite)/length(favorite)
favorite <- c('winter', 'summer', 'spring', 'summer', 'summer',
'fall', 'fall', 'summer', 'spring', 'spring')
favorite
table(favorite)
table(favorite)/length(favorite)
ds = table(favorite)
ds
barplot(ds.main='favorite season')
ds
ds = table(favorite)
barplot(ds.main='favorite season')
barplot(ds, main='favorite season')
ds <- table(favorite)
ds
barplot(ds, main='favorite season')
favorite <- c('winter', 'summer', 'spring', 'summer', 'summer',
'fall', 'fall', 'summer', 'spring', 'spring')
favorite
table(favorite)
table(favorite)/length(favorite)
ds <- table(favorite)
ds
barplot(ds, main='favorite season')
pie(ds, main='favorite season')
ds <- table(favorite)
ds
pie(ds, main='favorite season')
favorite.color <- c(2, 3, 2, 1, 1, 2, 2, 1, 3, 2, 1, 3, 2, 1, 2)
ds <- table(favorite.color)
ds
ds
barplot(ds, mai = 'favorite color')
colors <- c('green', 'red', 'blue')
names(ds) <- colors
ds
barplot(ds, main = 'favorite color', col = colors)
pie(ds, main = 'favorite color', col = colors)
weight <- c(60, 62, 64, 65, 68, 69)
weight.heavy <- c(weight, 120)
weight
weight.heavy
mean(weight)
mean(weight.heavy)
median(weight)
median(weight.heavy)
menu(weight, trim = 0.2)
mean(weight, trim = 0.2)
mean(weight.heavy, trim = 0.2)
mtdata <- c(60, 62, 64, 65, 68, 69, 120)
mydata <- c(60, 62, 64, 65, 68, 69, 120)
quantile(mydata)
quantile(mydata, (0:10) / 10)
summary(mydata)
mydata <- c(60, 62, 64, 65, 68, 69, 120)
var(mydata)
sd(mydata)
range(mydata)
diff(range(mydata))
dist <- cars[,2]
hist(dist,
main = "Histogram for 제동거리",
xlab = "제동거리",
ylab = "빈도수",
border = "blue",
col = "green",
las = 2,
breaks = 5)
dist <- cars[,2]
dist <- cars[,2]
boxplot(dist, main = "자동차 제동거리")
dist <- cars[,2]
boxplot.stats(dist)
